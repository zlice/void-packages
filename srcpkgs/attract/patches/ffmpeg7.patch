--- a/src/media.cpp
+++ b/src/media.cpp
@@ -61,6 +61,9 @@
   #define FORMAT_CTX_URL m_imp->m_format_ctx->filename
 #endif

+#define HAVE_CH_LAYOUT (LIBAVUTIL_VERSION_INT >= AV_VERSION_INT(57, 28, 100))
+#define HAVE_DURATION (LIBAVUTIL_VERSION_INT >= AV_VERSION_INT(58, 2, 100))
+
 void try_hw_accel( AVCodecContext *&codec_ctx, FeAVCodec *&dec );

 std::string g_decoder;
@@ -323,7 +326,7 @@
 {
 	int data_size = av_samples_get_buffer_size(
 		NULL,
-		codec_ctx->channels,
+		codec_ctx->ch_layout.nb_channels,
 		frame->nb_samples,
 		codec_ctx->sample_fmt, 1);

@@ -349,17 +352,16 @@
 				return false;
 			}

-			int64_t channel_layout = frame->channel_layout;
-			if ( !channel_layout )
-			{
-				channel_layout = av_get_default_channel_layout(
-						codec_ctx->channels );
-			}
+			AVChannelLayout layout;
+      av_channel_layout_copy(&layout, &frame->ch_layout);
+      if (!av_channel_layout_check(&layout) ) {
+        av_channel_layout_default(&layout, codec_ctx->ch_layout.nb_channels);
+      }
+      av_opt_set_chlayout(resample_ctx, "in_chlayout", &layout, 0);
+      av_opt_set_chlayout(resample_ctx, "out_chlayout", &layout, 0);

-			av_opt_set_int( resample_ctx, "in_channel_layout", channel_layout, 0 );
 			av_opt_set_int( resample_ctx, "in_sample_fmt", frame->format, 0 );
 			av_opt_set_int( resample_ctx, "in_sample_rate", frame->sample_rate, 0 );
-			av_opt_set_int( resample_ctx, "out_channel_layout", channel_layout, 0 );
 			av_opt_set_int( resample_ctx, "out_sample_fmt", AV_SAMPLE_FMT_S16, 0 );
 			av_opt_set_int( resample_ctx, "out_sample_rate", frame->sample_rate, 0 );

@@ -384,7 +386,7 @@
 			int out_linesize;
 			av_samples_get_buffer_size(
 				&out_linesize,
-				codec_ctx->channels,
+				codec_ctx->ch_layout.nb_channels,
 				frame->nb_samples,
 				AV_SAMPLE_FMT_S16, 0 );

@@ -402,8 +404,8 @@
 				FeLog() << "Error performing audio conversion." << std::endl;
 				return false;
 			}
-			offset += out_samples * codec_ctx->channels;
-			data.sampleCount += out_samples * codec_ctx->channels;
+			offset += out_samples * codec_ctx->ch_layout.nb_channels;
+			data.sampleCount += out_samples * codec_ctx->ch_layout.nb_channels;
 			data.samples = audio_buff;
 		}
 	}
@@ -760,7 +762,7 @@

 						// Track pts and duration if we need to correct next frame
 						prev_pts = raw_frame->pts;
-						prev_duration = raw_frame->pkt_duration;
+						prev_duration = raw_frame->duration;
 #endif

 						detached_frame = raw_frame;
@@ -1066,7 +1068,7 @@
 					+ codec_ctx->sample_rate );

 				sf::SoundStream::initialize(
-					codec_ctx->channels,
+					codec_ctx->ch_layout.nb_channels,
 					codec_ctx->sample_rate );

 				sf::SoundStream::setLoop( false );
